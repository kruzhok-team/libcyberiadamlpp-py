<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
  <data key="gFormat">Cyberiada-GraphML-1.0</data>
  <key id="gFormat" for="graphml" attr.name="format" attr.type="string"/>
  <key id="dName" for="graph" attr.name="name" attr.type="string"/>
  <key id="dName" for="node" attr.name="name" attr.type="string"/>
  <key id="dStateMachine" for="graph" attr.name="stateMachine" attr.type="string"/>
  <key id="dSubmachineState" for="node" attr.name="submachineState" attr.type="string"/>
  <key id="dGeometry" for="graph" attr.name="geometry"/>
  <key id="dGeometry" for="node" attr.name="geometry"/>
  <key id="dGeometry" for="edge" attr.name="geometry"/>
  <key id="dSourcePoint" for="edge" attr.name="sourcePoint"/>
  <key id="dTargetPoint" for="edge" attr.name="targetPoint"/>
  <key id="dLabelGeometry" for="edge" attr.name="labelGeometry"/>
  <key id="dNote" for="node" attr.name="note" attr.type="string"/>
  <key id="dVertex" for="node" attr.name="vertex" attr.type="string"/>
  <key id="dData" for="node" attr.name="data" attr.type="string"/>
  <key id="dData" for="edge" attr.name="data" attr.type="string"/>
  <key id="dMarkup" for="node" attr.name="markup" attr.type="string"/>
  <key id="dColor" for="node" attr.name="color" attr.type="string"/>
  <key id="dColor" for="edge" attr.name="color" attr.type="string"/>
  <key id="dPivot" for="edge" attr.name="pivot" attr.type="string"/>
  <key id="dChunk" for="edge" attr.name="chunk" attr.type="string"/>
  <graph id="G0" edgedefault="directed">
    <data key="dStateMachine"/>
    <data key="dName">SM</data>
    <node id="nMeta">
      <data key="dNote">formal</data>
      <data key="dName">CGML_META</data>
      <data key="dData">standardVersion/ 1.0

transitionOrder/ transitionFirst

eventPropagation/ block

</data>
    </node>
    <node id="n0">
      <data key="dName">State 1</data>
      <data key="dData">entry/

exit/
exit();
</data>
      <graph id="n0:" edgedefault="directed">
        <node id="n0::n0">
          <data key="dName">State 2</data>
          <data key="dData">EVENT [is_guard()]/
action();

EVENT(b) [is_guard() &amp;&amp; is_second()]/
action1();
action2();

EVENT [else]/

entry/
init();
</data>
        </node>
      </graph>
    </node>
  </graph>
</graphml>
